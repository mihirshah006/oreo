<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2016, The CyanogenMod Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>25</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>31</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>0</item>
        <item>25</item>
    </integer-array>

    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume keys
         For example, a device with Home, Back and Menu keys would set this
         config to 7. 
    <integer name="config_deviceHardwareKeys">83</integer> -->

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7.
    <integer name="config_deviceHardwareWakeKeys">64</integer> -->

    <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    
    <integer name="config_longPressOnHomeBehavior">3</integer>

    <!-- Control the behavior when the user long presses the app switch button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
            6 - Launch camera
            7 - Turn screen off
            8 - Last app
         This needs to match the constants in
         services/core/java/com/android/server/policy/PhoneWindowManager.java
    
    <integer name="config_longPressOnAppSwitchBehavior">8</integer> -->

    <!-- Control the behavior when the user double-taps the home button.
            0 - Nothing
            1 - Menu
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHomeBehavior">0</integer>

    <!-- Whether to enable auto provisioning the app for new SIM card on boot.-->
    <!--bool name="config_auto_provision_enable">true</bool-->

    <!-- Device configuration setting the /proc/sys/vm/extra_free_kbytes tunable in the kernel
         (if it exists).  A high value will increase the amount of memory that the kernel
         tries to keep free, reducing allocation time and causing the lowmemorykiller to kill
         earlier.  A low value allows more memory to be used by processes but may cause more
         allocations to block waiting on disk I/O or lowmemorykiller.  Overrides the default
         value chosen by ActivityManager based on screen size.  0 prevents keeping any extra
         memory over what the kernel keeps by default.  -1 keeps the default. -->
    <integer name="config_extraFreeKbytesAbsolute">61440</integer>

    <!--  Disable Modem Profiles for CDMA -->
    <!--
    <bool name="config_fetch_apn_from_omh_card">false</bool>
    -->

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>
    <bool name="config_device_vt_available">true</bool>

    <!-- Flag specifying whether VoLTE should be available for carrier: independent of
         carrier provisioning. If false: hard disabled. If true: then depends on carrier
         provisioning, availability etc -->
    <bool name="config_carrier_volte_available">true</bool>
    <bool name="config_carrier_vt_available">true</bool>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
    <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- Array of output values for keyboard backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessKeyboardBacklightValues"></integer-array>

    <!--
    <integer name="config_buttonBrightnessSettingDefault">0</integer>
    -->

    <!-- Default value for led color when battery is low on charge -->
    <integer name="config_notificationsBatteryLowARGB">0x00FF0000</integer>

    <!-- Default value for led color when battery is medium charged -->
    <integer name="config_notificationsBatteryMediumARGB">0x000000FF</integer>

    <!-- Default value for led color when battery is fully charged -->
    <integer name="config_notificationsBatteryFullARGB">0x0000FF00</integer>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option
    <bool name="config_intrusiveBatteryLed">true</bool> -->

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- Enable doze mode -->
    <bool name="config_dozeAfterScreenOff">true</bool>
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>
    <integer name="config_screenBrightnessDoze">17</integer>
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- Does the notification LED support multiple colors?
                  Used to decide if the user can change the colors
    <bool name="config_multiColorNotificationLed">true</bool> -->

    <!-- Our modem doesn't support this query yet -->
    <string name="config_radio_access_family">GPRS|EDGE|UMTS|HSDPA|HSUPA|HSPA|LTE|HSPAP|GSM|TD_SCDMA|WCDMA|LTE_CA</string>

    <!-- Enable overlay for all location components. -->
    <bool name="config_enableNetworkLocationOverlay" translatable="false">false</bool>
    <string name="config_networkLocationProviderPackageName" translatable="false">com.qualcomm.location</string>
    <bool name="config_enableFusedLocationOverlay" translatable="false">false</bool>
    <string name="config_fusedLocationProviderPackageName" translatable="false">com.qualcomm.location</string>

    <!-- Component name of the combo network location provider.
    <string name="config_comboNetworkLocationProvider" translatable="false">com.qualcomm.location</string> -->

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Flag indicating whether round icons should be parsed from the application manifest. -->
    <bool name="config_useRoundIcon">true</bool>

    <!-- Night display  -->
    <bool name="config_nightDisplayAvailable">true</bool>

</resources>
